syntax = "proto3";

package communication;

service MCService {
    rpc HandleMessage (Message) returns (Response);
}

service GSService {
    rpc HandleStart (Start) returns (Response);
    rpc HandleCommitRecord (SignedCommitRecord) returns (Response);
}

service SATService {
    rpc HandleStart (Start) returns (Response);
    rpc HandleSendingStationMessage (SendingStationMessage) returns (Response);
}

service SSService {
    rpc HandleStart (Start) returns (Response);
}

service SSMerkleTreeHandlerService {
    rpc HandleSignMerkleTreeResponse (SignMerkleTreeResponse) returns (Response);
}

message Message {
    string content = 1;
    string sender = 2;
}

message Response {
    string message = 1;
}

message Signature {
    bytes value = 1; // Assuming Signature is a byte array
}

message PublicKey {
    bytes value = 1; // Assuming PublicKey is a byte array
}

message PublicKeyList {
    repeated PublicKey public_keys = 1;
}

message SignedCommitRecord {
    bytes signed_commit_record = 1;
}

message Start {
    map<uint64, PublicKey> satellite_slot_assignments = 1;
    map<uint64, PublicKeyList> sending_station_slot_assignments = 2;
    repeated PublicKey ground_station_public_keys = 3;
    repeated PublicKey sending_station_public_keys = 4;
    repeated PublicKey satellite_public_keys = 5;
    uint64 t = 6;
    uint32 f = 7;
    bytes genesis_record = 8;
}

message SignMerkleTreeResponse {
    bytes signature = 1;
    bytes root = 2;
}

message SendingStationMessage {
    bytes sending_station_message = 1;
    bytes signature = 2;
}